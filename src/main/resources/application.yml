server:
  error:
    include-message: always
    include-binding-errors: always

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/registration
    username: postgres
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

  mail:
    host: localhost
    port: 1025
    username: hello
    password: hello

    properties:
      mail:
        smtp:
          ssl:
            trust: "*"
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

#server.error.include-message= always
#server.error.include-binding-errors= always
#
#spring.mail.host = email-smtp.eu-central-1.amazonaws.com
#spring.mail.port = 587
#spring.mail.username= AKIAXIBKGZYLDBF5PBXX
#spring.mail.password= BOI5piUcxUH8sJY7T9WQIovrogNkwDFH20weRFgLHqY/
#
#spring.mail.properties.mail.smtp.ssl.trust= "*"
#spring.mail.properties.mail.smtp.ssl.auth=true
#spring.mail.properties.mail.smtp.ssl.starttls.enable = true
#spring.mail.properties.mail.smtp.ssl.connectiontimeout= 5000
#spring.mail.properties.mail.smtp.ssl.timeout= 3000
#spring.mail.properties.mail.smtp.ssl.writetimeout= 5000









#  spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.jpa.show-sql=true
#
## Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = create-drop
#
#spring.security.filter.order=10